{"version":3,"sources":["actions/actionTypes.js","common/constants.js","common/helpers.js","reducers/grid.js","reducers/helpers/roverHelpers.js","reducers/rover.js","reducers/index.js","components/library/Input.js","components/InstructionsForm.js","actions/roverActions.js","components/Actions.js","components/Grid.js","components/LogPosition.js","components/Title.js","pages/Home.js","store/index.js","index.js"],"names":["ROVER_CLEAR","ROVER_NEW_INSTRUCTIONS","ROVER_NEW_MOVE","ROVER_SET_POSITION","ROVER_CLEAR_POSITION_LOG","KEYBOARDS_CODES","ROVER_DIRECTION","ROVER_MOVEMENT","F","L","R","getDirectionArrow","direction","getRandomRoverPosition","grid","coordinates","push","x","y","Set","getRandomCoordinates","getRoverMovementFromCode","code","defaultState","state","action","type","getNewRoverState","current","roverMovement","newPosition","newDirection","isCoordinateInsideGrid","isCorrectMovement","log","getStateCheckingMovement","reducers","rover","payload","instructions","instructionsArray","newState","forEach","instruction","toUpperCase","position","getGrid","getRover","combineReducers","Input","React","forwardRef","props","ref","StyledInput","styled","getStylesBasedOnType","StyledInstructionsForm","className","roverNewInstructionsMove","inputRef","useRef","handleFormSubmit","useCallback","event","preventDefault","split","filter","item","Object","keys","includes","join","getValidInstructions","target","value","onSubmit","htmlFor","name","id","placeholder","connect","styledActions","StyledGrid","gridItems","columns","rows","iRows","iColumns","rowItems","xCoordinate","yCoordinate","isRoverPosition","renderGrid","map","getLogText","StyledLogPosition","roverClearPositionLog","handleClearLog","onClick","length","i","StyledTitle","StyledHome","roverClear","roverNewKeyboardMove","roverSetPosition","useEffect","roverPosition","eventListener","document","addEventListener","removeEventListener","configureStore","enhancers","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","composedEnhancers","compose","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08a504dc.chunk.js","sourcesContent":["export const ROVER_CLEAR = 'ROVER@CLEAR';\r\nexport const ROVER_NEW_INSTRUCTIONS = 'ROVER@NEW_INSTRUCTIONS';\r\nexport const ROVER_NEW_MOVE = 'ROVER@NEW_MOVE';\r\nexport const ROVER_SET_GRID = 'ROVER@SET_GRID';\r\nexport const ROVER_SET_POSITION = 'ROVER@SET_POSITION';\r\nexport const ROVER_CLEAR_POSITION_LOG = 'ROVER@CLEAR_POSITION_LOG';\r\n","export const KEYBOARDS_CODES = {\r\n  A: 'KeyA',\r\n  D: 'KeyD',\r\n  W: 'KeyW',\r\n};\r\n\r\nexport const ROVER_DIRECTION = {\r\n  N: 'north',\r\n  S: 'south',\r\n  E: 'east',\r\n  W: 'west',\r\n};\r\n\r\nexport const ROVER_MOVEMENT = {\r\n  F: 'front',\r\n  L: 'left',\r\n  R: 'right',\r\n};\r\n","import React from 'react';\r\n\r\nimport { KEYBOARDS_CODES, ROVER_DIRECTION, ROVER_MOVEMENT } from './constants';\r\n\r\nconst isCoordinateInsideGrid = (grid, newPosition) =>\r\n  newPosition.x >= 0 &&\r\n  newPosition.x <= grid.x &&\r\n  newPosition.y >= 0 &&\r\n  newPosition.y <= grid.y;\r\n\r\nexport const getDirectionArrow = direction => {\r\n  switch (direction) {\r\n    case ROVER_DIRECTION.W:\r\n      return <>&#8592;</>;\r\n\r\n    case ROVER_DIRECTION.E:\r\n      return <>&#8594;</>;\r\n\r\n    case ROVER_DIRECTION.S:\r\n      return <>&#8595;</>;\r\n\r\n    case ROVER_DIRECTION.N:\r\n    default:\r\n      return <>&#8593;</>;\r\n  }\r\n};\r\n\r\nexport const getRandomCoordinates = () => {\r\n  const coordinates = [];\r\n\r\n  coordinates.push({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  return [...new Set(coordinates)];\r\n};\r\n\r\nexport const getRandomRoverPosition = grid => {\r\n  const roverPosition = getRandomCoordinates(grid)[0];\r\n\r\n  return roverPosition;\r\n};\r\n\r\nexport const getRoverMovementFromCode = code => {\r\n  switch (code) {\r\n    case KEYBOARDS_CODES.A:\r\n      return ROVER_MOVEMENT.L;\r\n    case KEYBOARDS_CODES.D:\r\n      return ROVER_MOVEMENT.R;\r\n    case KEYBOARDS_CODES.W:\r\n      return ROVER_MOVEMENT.F;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const getValidInstructions = instruction =>\r\n  instruction\r\n    ?.toUpperCase?.()\r\n    .split('')\r\n    .filter(item => Object.keys(ROVER_MOVEMENT).includes(item))\r\n    .join('') ?? '';\r\n\r\nexport const isCorrectMovement = ({ newPosition, grid }) => {\r\n  const isInsideGrid = isCoordinateInsideGrid(grid, newPosition);\r\n  return isInsideGrid;\r\n};\r\n","import { ROVER_CLEAR } from '../actions/actionTypes';\r\n\r\nconst defaultState = { x: 9, y: 9 };\r\n\r\nconst grid = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ROVER_CLEAR:\r\n      return defaultState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default grid;\r\n","import { ROVER_DIRECTION, ROVER_MOVEMENT } from '../../common/constants';\r\nimport { isCorrectMovement } from '../../common/helpers';\r\n\r\nconst getStateCheckingMovement = ({\r\n  grid,\r\n  newDirection,\r\n  newPosition,\r\n  state,\r\n}) => {\r\n  if (isCorrectMovement({ grid, newPosition })) {\r\n    return {\r\n      current: newPosition,\r\n      direction: newDirection,\r\n      log: [state.current, ...state.log],\r\n    };\r\n  }\r\n  return { ...state, log: ['Outside boundary', ...state.log] };\r\n};\r\n\r\nexport const getNewRoverState = ({\r\n  current,\r\n  direction,\r\n  grid,\r\n  roverMovement,\r\n  state,\r\n}) => {\r\n  const newPosition = { ...current };\r\n  let newDirection = null;\r\n  switch (roverMovement) {\r\n    case ROVER_MOVEMENT.F: {\r\n      switch (direction) {\r\n        case ROVER_DIRECTION.N: {\r\n          newPosition.y = newPosition.y + 1;\r\n          newDirection = ROVER_DIRECTION.N;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.S: {\r\n          newPosition.y = newPosition.y - 1;\r\n          newDirection = ROVER_DIRECTION.S;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.W: {\r\n          newPosition.x = newPosition.x - 1;\r\n          newDirection = ROVER_DIRECTION.W;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.E: {\r\n          newPosition.x = newPosition.x + 1;\r\n          newDirection = ROVER_DIRECTION.E;\r\n          break;\r\n        }\r\n        default:\r\n          return state;\r\n      }\r\n      break;\r\n    }\r\n    case ROVER_MOVEMENT.L: {\r\n      switch (direction) {\r\n        case ROVER_DIRECTION.N: {\r\n          newDirection = ROVER_DIRECTION.W;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.S: {\r\n          newDirection = ROVER_DIRECTION.E;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.W: {\r\n          newDirection = ROVER_DIRECTION.S;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.E: {\r\n          newDirection = ROVER_DIRECTION.N;\r\n          break;\r\n        }\r\n        default:\r\n          return state;\r\n      }\r\n      break;\r\n    }\r\n    case ROVER_MOVEMENT.R: {\r\n      switch (direction) {\r\n        case ROVER_DIRECTION.N: {\r\n          newDirection = ROVER_DIRECTION.E;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.S: {\r\n          newDirection = ROVER_DIRECTION.W;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.W: {\r\n          newDirection = ROVER_DIRECTION.N;\r\n          break;\r\n        }\r\n        case ROVER_DIRECTION.E: {\r\n          newDirection = ROVER_DIRECTION.S;\r\n          break;\r\n        }\r\n        default:\r\n          return state;\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n  return getStateCheckingMovement({\r\n    grid,\r\n    newDirection,\r\n    newPosition,\r\n    state,\r\n  });\r\n};\r\n","import {\r\n  ROVER_CLEAR,\r\n  ROVER_CLEAR_POSITION_LOG,\r\n  ROVER_NEW_INSTRUCTIONS,\r\n  ROVER_NEW_MOVE,\r\n  ROVER_SET_POSITION,\r\n} from '../actions/actionTypes';\r\nimport { ROVER_DIRECTION, ROVER_MOVEMENT } from '../common/constants';\r\nimport { getRoverMovementFromCode } from '../common/helpers';\r\nimport { getNewRoverState } from './helpers/roverHelpers';\r\n\r\nconst defaultState = {\r\n  current: null,\r\n  direction: ROVER_DIRECTION.N,\r\n  log: [],\r\n};\r\n\r\nconst rover = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ROVER_CLEAR:\r\n      return defaultState;\r\n\r\n    case ROVER_CLEAR_POSITION_LOG:\r\n      return { ...state, log: [] };\r\n\r\n    case ROVER_NEW_INSTRUCTIONS: {\r\n      const { instructions, grid } = action.payload;\r\n      const instructionsArray = [...instructions];\r\n      let newState = { ...state };\r\n\r\n      instructionsArray.forEach(instruction => {\r\n        const roverMovement = ROVER_MOVEMENT[instruction.toUpperCase()];\r\n        const { current, direction } = newState;\r\n\r\n        if (roverMovement) {\r\n          newState = getNewRoverState({\r\n            current,\r\n            direction,\r\n            grid,\r\n            roverMovement,\r\n            state: newState,\r\n          });\r\n        }\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    case ROVER_NEW_MOVE: {\r\n      const { code, grid } = action.payload;\r\n      const roverMovement = getRoverMovementFromCode(code);\r\n      const { current, direction } = state;\r\n      return getNewRoverState({\r\n        current,\r\n        direction,\r\n        grid,\r\n        roverMovement,\r\n        state,\r\n      });\r\n    }\r\n\r\n    case ROVER_SET_POSITION: {\r\n      const { position } = action.payload;\r\n      const log = state.current\r\n        ? [...state.log, state.current, position]\r\n        : [...state.log];\r\n\r\n      return {\r\n        ...state,\r\n        current: position,\r\n        log,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rover;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport grid from './grid';\r\nimport rover from './rover';\r\n\r\nconst reducers = {\r\n  grid,\r\n  rover,\r\n};\r\n\r\nexport const getGrid = state => state.grid;\r\nexport const getRover = state => state.rover;\r\n\r\nexport default combineReducers(reducers);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = React.forwardRef((props, ref) => <input {...props} ref={ref} />)\r\n\r\nconst getStylesBasedOnType = type => {\r\n  switch (type) {\r\n    case 'submit':\r\n    case 'reset':\r\n      return 'cursor: pointer;';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst StyledInput = styled(Input)`\r\n  ${({ type }) => getStylesBasedOnType(type)}\r\n`;\r\n\r\nexport default StyledInput;\r\n","import React, { useCallback, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { roverNewInstructionsMove } from '../actions/roverActions';\r\nimport { getValidInstructions } from '../common/helpers';\r\nimport { getGrid } from '../reducers';\r\nimport Input from './library/Input';\r\n\r\nconst InstructionsForm = ({ className, roverNewInstructionsMove, grid }) => {\r\n  const inputRef = useRef(null);\r\n  const handleFormSubmit = useCallback(\r\n    event => {\r\n      event.preventDefault();\r\n      const inputValue = event?.target?.instructions?.value;\r\n      const instructions = getValidInstructions(inputValue);\r\n\r\n      inputRef.current.value = instructions;\r\n      roverNewInstructionsMove({\r\n        grid,\r\n        instructions,\r\n      });\r\n      inputRef.current.value = '';\r\n    },\r\n    [grid, roverNewInstructionsMove]\r\n  );\r\n\r\n  return (\r\n    <form className={className} onSubmit={handleFormSubmit}>\r\n      <div>\r\n        <label className=\"label\" htmlFor=\"instructions\">\r\n          Rover Instructions:\r\n        </label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"instructions\"\r\n          id=\"instructions\"\r\n          placeholder=\"Type Rover instructions\"\r\n          ref={inputRef}\r\n        />\r\n      </div>\r\n      <p>\r\n        <Input type=\"reset\" value=\"Reset\" className=\"instructions-reset\" />\r\n        <Input className=\"instructions-send\" type=\"submit\" value=\"Send\" />\r\n      </p>\r\n\r\n      <div className=\"instructions\">\r\n        <p>\r\n          <b>f:</b>\r\n          <i> Move Forward</i>\r\n        </p>\r\n        <p>\r\n          <b>r:</b>\r\n          <i> Turn Right</i>\r\n        </p>\r\n        <p>\r\n          <b>l:</b>\r\n          <i> Turn Left</i>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst StyledInstructionsForm = styled(InstructionsForm)`\r\n  .label {\r\n    display: block;\r\n    margin: 0 0 5px;\r\n  }\r\n\r\n  .instructions-reset {\r\n    background-color: #fd335a;\r\n    border: none;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .instructions-send {\r\n    margin-left: 15px;\r\n    background-color: #44b881;\r\n    border: none;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .instructions {\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  grid: getGrid(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  roverNewInstructionsMove,\r\n})(StyledInstructionsForm);\r\n","import {\r\n  ROVER_CLEAR,\r\n  ROVER_CLEAR_POSITION_LOG,\r\n  ROVER_NEW_INSTRUCTIONS,\r\n  ROVER_NEW_MOVE,\r\n  ROVER_SET_POSITION,\r\n} from './actionTypes';\r\n\r\nexport const roverClear = () => ({\r\n  type: ROVER_CLEAR,\r\n});\r\n\r\nexport const roverClearPositionLog = () => ({\r\n  type: ROVER_CLEAR_POSITION_LOG,\r\n});\r\n\r\nexport const roverNewInstructionsMove = ({ instructions, grid }) => ({\r\n  type: ROVER_NEW_INSTRUCTIONS,\r\n  payload: {\r\n    instructions,\r\n    grid,\r\n  },\r\n});\r\n\r\nexport const roverNewKeyboardMove = ({ code, grid }) => ({\r\n  type: ROVER_NEW_MOVE,\r\n  payload: {\r\n    code,\r\n    grid,\r\n  },\r\n});\r\n\r\nexport const roverSetPosition = position => ({\r\n  type: ROVER_SET_POSITION,\r\n  payload: {\r\n    position,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport InstructionsForm from './InstructionsForm';\r\n\r\nconst Actions = ({ className }) => (\r\n  <div className={className}>\r\n    <InstructionsForm />\r\n  </div>\r\n);\r\n\r\nconst styledActions = styled(Actions)`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  border: 1px solid black;\r\n  padding: 20px;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n\r\n  @media (max-width: 900px) {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nexport default styledActions;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { getDirectionArrow } from '../common/helpers';\r\nimport { getGrid, getRover } from '../reducers';\r\n\r\nconst Grid = ({\r\n  className,\r\n  grid: { x, y },\r\n  rover: { current, direction },\r\n}) => {\r\n  const renderGrid = () => {\r\n    const gridItems = [];\r\n    const columns = x;\r\n    const rows = y;\r\n    let iRows = 0;\r\n    for (iRows; iRows <= rows; iRows++) {\r\n      let iColumns = 0;\r\n      const rowItems = [];\r\n\r\n      for (iColumns; iColumns <= columns; iColumns++) {\r\n        const xCoordinate = iColumns;\r\n        const yCoordinate = rows - iRows;\r\n        const id = `${xCoordinate}-${yCoordinate}`;\r\n        let isRoverPosition = false;\r\n\r\n        if (xCoordinate === current?.x && yCoordinate === current?.y) {\r\n          isRoverPosition = true;\r\n        } \r\n\r\n        rowItems.push(\r\n          <div\r\n            className={`grid-square ${\r\n              isRoverPosition\r\n                ? 'grid-square-rover'\r\n                \r\n                : ''\r\n            }`}\r\n            id={id}\r\n            key={id}\r\n          >\r\n            {isRoverPosition ? (\r\n              <span className=\"grid-arrow\">{getDirectionArrow(direction)}</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      gridItems.push(\r\n        <div key={iRows} className=\"grid-rows\">\r\n          {rowItems}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return gridItems;\r\n  };\r\n\r\n  return <div className={className}>{renderGrid().map(item => item)}</div>;\r\n};\r\n\r\nconst StyledGrid = styled(Grid)`\r\n  display: inline-block;\r\n  margin-bottom: 15px;\r\n  vertical-align: top;\r\n\r\n  .grid-rows {\r\n    line-height: 0;\r\n    margin: 0;\r\n\r\n    .grid-square {\r\n      border-top: 1px solid #24292e;\r\n      border-right: 1px solid #24292e;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      position: relative;\r\n      width: 2rem;\r\n\r\n      &:first-child {\r\n        border-left: 1px solid #24292e;\r\n      }\r\n      \r\n\r\n      &-rover {\r\n        background-color: #44b881;\r\n      }\r\n\r\n      .grid-arrow {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        font-size: 1.5rem;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n\r\n  div:last-of-type .grid-square {\r\n    border-bottom: 1px solid #24292e;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    .grid-rows {\r\n      .grid-square {\r\n        width: 1.25rem;\r\n        height: 1.25rem;\r\n      }\r\n      .grid-arrow {\r\n        font-size: 1rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 350px) {\r\n    .grid-rows {\r\n      .grid-square {\r\n        width: 0.75rem;\r\n        height: 0.75rem;\r\n      }\r\n      .grid-arrow {\r\n        font-size: 0.5rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  grid: getGrid(state),\r\n  rover: getRover(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(StyledGrid);\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { roverClearPositionLog } from '../actions/roverActions';\r\nimport { getRover } from '../reducers';\r\n\r\nconst getLogText = position => {\r\n  if (typeof position === 'string') {\r\n    return position;\r\n  }\r\n  return `X${position.x}, Y${position.y}`;\r\n};\r\n\r\nconst LogPosition = ({\r\n  className,\r\n  rover: { current, direction, log },\r\n  roverClearPositionLog,\r\n}) => {\r\n  const handleClearLog = useCallback(roverClearPositionLog, [\r\n    roverClearPositionLog,\r\n  ]);\r\n  return (\r\n    <div className={className}>\r\n      {current && (\r\n        <div>\r\n          <span className=\"current\">Current position:</span>\r\n          <strong>\r\n            X{current.x}, Y{current.y}\r\n          </strong>\r\n        </div>\r\n      )}\r\n      <p className=\"direction\">\r\n        Current direction:\r\n        <br />\r\n        <b>{direction.toUpperCase()}</b>\r\n      </p>\r\n      <button onClick={handleClearLog} className=\"clear-log\">\r\n        Clear Log\r\n      </button>\r\n\r\n      {!!log.length && (\r\n        <>\r\n          <h5 className=\"title\">Last positions: </h5>\r\n          <div className=\"positions-container\">\r\n            {log.map((position, i) => (\r\n              <p key={i}>{getLogText(position)}</p>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledLogPosition = styled(LogPosition)`\r\n  display: inline-block;\r\n  height: 376px;\r\n  overflow: hidden;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  min-width: 225px;\r\n  border-radius: 10px;\r\n\r\n  .current {\r\n    display: block;\r\n    margin: 0 0 5px;\r\n  }\r\n\r\n  .direction {\r\n    margin: 20px 0 18px;\r\n  }\r\n\r\n  .delete-button {\r\n    float: right;\r\n    margin-right: 30px;\r\n  }\r\n\r\n  .title {\r\n    margin: 23px 0 0 0;\r\n  }\r\n\r\n  .positions-container {\r\n    height: 225px;\r\n    overflow: auto;\r\n  }\r\n\r\n  .clear-log {\r\n    border: none;\r\n    background-color: #fd335a;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n  }\r\n  .clear-log:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  rover: getRover(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { roverClearPositionLog })(\r\n  StyledLogPosition\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = ({ className }) => (\r\n  <div>\r\n    <h1 className={className}>Mars Rover Mission</h1>\r\n    <h4>10 * 10 in UI</h4>\r\n  </div>\r\n);\r\n\r\nconst StyledTitle = styled(Title)`\r\n  margin: 0 0 30px;\r\n`;\r\n\r\nexport default StyledTitle;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { roverClear, roverNewKeyboardMove, roverSetPosition } from '../actions/roverActions';\r\nimport {  KEYBOARDS_CODES } from '../common/constants';\r\nimport {  getRandomRoverPosition } from '../common/helpers';\r\nimport Actions from '../components/Actions';\r\nimport Grid from '../components/Grid';\r\nimport LogPosition from '../components/LogPosition';\r\nimport Title from '../components/Title';\r\nimport { getGrid } from '../reducers';\r\n\r\nconst Home = ({\r\n  className,\r\n  grid,\r\n  roverClear,\r\n  roverNewKeyboardMove,\r\n  roverSetPosition,\r\n}) => {\r\n  useEffect(() => {\r\n    const roverPosition = getRandomRoverPosition(grid);\r\n    roverSetPosition(roverPosition);\r\n  }, [ grid, roverSetPosition]);\r\n\r\n  useEffect(() => {\r\n    const eventListener = event => {\r\n      const { code } = event;\r\n      switch (code) {\r\n        case KEYBOARDS_CODES.A:\r\n        case KEYBOARDS_CODES.D:\r\n        case KEYBOARDS_CODES.W:\r\n          return roverNewKeyboardMove({ code, grid });\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n    document.addEventListener('keydown', eventListener);\r\n    return () => document.removeEventListener('keydown', eventListener);\r\n  }, [grid,  roverNewKeyboardMove]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      roverClear();\r\n    };\r\n  }, [roverClear]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <header>\r\n        <Title />\r\n      </header>\r\n\r\n      <main className=\"main-container\">\r\n        <Grid />\r\n        <div className=\"main-container-text\">\r\n          <Actions />\r\n          <LogPosition />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledHome = styled(Home)`\r\n  padding: 50px;\r\n  text-align: center;\r\n\r\n  .main-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 100%;\r\n  }\r\n\r\n  .main-container-text {\r\n    width: 50%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 900px) {\r\n    padding: 25px;\r\n    .main-container {\r\n      flex-direction: column;\r\n    }\r\n    .main-container-text {\r\n      width: 100%;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  grid: getGrid(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  roverClear,\r\n  roverNewKeyboardMove,\r\n  roverSetPosition,\r\n})(StyledHome);\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from '../reducers';\r\n\r\nconst configureStore = () => {\r\n  const initialState = {};\r\n  const enhancers = [];\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension({ name: '- ROVER MARS -' }));\r\n  }\r\n\r\n  const composedEnhancers = compose(applyMiddleware(thunk), ...enhancers);\r\n\r\n  const store = createStore(reducers, initialState, composedEnhancers);\r\n\r\n  return { store };\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Home from './pages/Home';\r\n\r\nimport configureStore from './store';\r\n\r\nimport './index.css';\r\n\r\nconst { store } = configureStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Home />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}